/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./contexts/PlayerContext.jsx":
/*!************************************!*\
  !*** ./contexts/PlayerContext.jsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PlayerProvider\": () => (/* binding */ PlayerProvider),\n/* harmony export */   \"usePlayer\": () => (/* binding */ usePlayer)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst playerContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst usePlayer = ()=>{\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(playerContext);\n};\nconst PlayerProvider = ({ children  })=>{\n    const ROWS_COUNT = 3;\n    const EQUATION_LENGTH = 3;\n    const { 0: currentGuess , 1: setCurrentGuess  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const { 0: currentIndex , 1: setCurrentIndex  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const { 0: guesses , 1: setGuesses  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(Array(ROWS_COUNT).fill(null));\n    const { 0: gameover , 1: setGameover  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { 0: win , 1: setWin  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { 0: equation , 1: setEquation  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const { 0: error , 1: setError  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const { 0: gameoverModal , 1: setGameoverModal  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { 0: guessedResult , 1: setGuessedResult  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(Array(ROWS_COUNT).fill(null));\n    const handleInput = (e, value = \"\")=>{\n        const key = e.key || value;\n        if (gameover) return;\n        const eqFilter = /^[0-9+\\-*/=]|(Backspace|Enter)+$/;\n        const temp_operators = [\n            \"+\",\n            \"-\",\n            \"*\",\n            \"/\"\n        ];\n        if (!eqFilter.test(key)) {\n            return;\n        }\n        if (key === \"Enter\") {\n            if (currentGuess.length !== EQUATION_LENGTH) {\n                setError(\"You need to fill up the squares.\");\n                return;\n            }\n            /*if (\n        !currentGuess.includes(\"+\") &&\n        !currentGuess.includes(\"-\") &&\n        !currentGuess.includes(\"*\") &&\n        !currentGuess.includes(\"/\")\n      ) {\n        setError(\"The equation needs to include at least one operator.\");\n        return;\n      }*/ if (!currentGuess.includes(\"=\")) {\n                setError(\"The equation needs to include '='.\");\n                return;\n            }\n            if (currentGuess[0] === \"/\" || currentGuess[0] === \"*\") {\n                setError(\"Invalid Equation.\");\n                return;\n            }\n            if (currentGuess.split(\"=\").length - 1 !== 1) {\n                setError(\"There are multiple '=' in the equation.\");\n                return;\n            }\n            let [LHS, RHS] = currentGuess.split(\"=\");\n            LHS = formatEquation(LHS);\n            RHS = formatEquation(RHS);\n            for(let i = 0; i < LHS.length; i++){\n                if (LHS[i].length > 1) {\n                    if (i === LHS.length - 1) {\n                        if (temp_operators.includes(LHS[i][0])) {\n                            setError(\"Invalid Equation.\");\n                            return;\n                        }\n                    }\n                    if (temp_operators.includes(LHS[i][0]) && temp_operators.includes(LHS[i][1])) {\n                        setError(\"Invalid Equation.\");\n                        return;\n                    }\n                }\n            }\n            for(let i1 = 0; i1 < RHS.length; i1++){\n                if (RHS[i1].length > 1) {\n                    if (i1 === RHS.length - 1) {\n                        if (temp_operators.includes(RHS[i1][0])) {\n                            setError(\"Invalid Equation.\");\n                            return;\n                        }\n                    }\n                    if (temp_operators.includes(RHS[i1][0]) && temp_operators.includes(RHS[i1][1])) {\n                        setError(\"Invalid Equation.\");\n                        return;\n                    }\n                }\n            }\n            if (calculateArray(LHS) !== calculateArray(RHS)) {\n                setError(\"Left side in not equal to the right side.\");\n                return;\n            }\n            const temp_guess = [\n                ...guesses\n            ];\n            temp_guess[currentIndex] = currentGuess;\n            setGuesses(temp_guess);\n            if (currentGuess === equation) {\n                setGameover(true);\n                setWin(true);\n            } else if (currentIndex === ROWS_COUNT - 1) {\n                setGameover(true);\n            }\n            setCurrentIndex((prev)=>prev + 1\n            );\n            setCurrentGuess(\"\");\n            return;\n        }\n        if (key === \"Backspace\") {\n            setCurrentGuess((prev)=>prev.slice(0, -1)\n            );\n            return;\n        }\n        if (currentGuess.length !== EQUATION_LENGTH) {\n            setCurrentGuess((prev)=>prev + key\n            );\n        }\n    };\n    const resetEverything = ()=>{\n        setCurrentGuess(\"\");\n        setCurrentIndex(0);\n        setGuesses(Array(ROWS_COUNT).fill(null));\n        setGameover(false);\n        setWin(false);\n        setEquation(\"\");\n        setError(\"\");\n        setGameoverModal(false);\n        setGuessedResult(Array(ROWS_COUNT).fill(null));\n    };\n    const generateEquation = (length)=>{\n        const equationLength = length;\n        const maxOperatorCount = Math.floor(equationLength / 2 - 1);\n        const minOperatorCount = 0;\n        const possibleOperators = [\n            \"+\",\n            \"-\",\n            \"/\",\n            \"*\"\n        ];\n        const possibleNumbers = \"0123456789\";\n        const operatorsToUse = [];\n        const numbersToUse = [];\n        const randomOperatorCount = getRandomInt(minOperatorCount, maxOperatorCount);\n        for(let i = 0; i < randomOperatorCount; i++){\n            operatorsToUse.push(possibleOperators[getRandomInt(0, possibleOperators.length - 1)]);\n        }\n        if (operatorsToUse[0] !== \"-\" && operatorsToUse.length === maxOperatorCount) {\n            operatorsToUse.splice(-1, 1);\n        }\n        const LHSNumberCount = maxOperatorCount > 1 && operatorsToUse.length === maxOperatorCount ? operatorsToUse.length : getRandomInt(operatorsToUse.length + 1, equationLength - operatorsToUse.length - 2);\n        for(let i2 = 0; i2 < LHSNumberCount; i2++){\n            numbersToUse.push(possibleNumbers[getRandomInt(0, possibleNumbers.length - 1)]);\n        }\n        const LHSequationLength = 1; //operatorsToUse.length + LHSNumberCount;\n        const LHSequation = Array(LHSequationLength);\n        for(let i3 = 0; i3 < LHSequationLength; i3++){\n            if (operatorsToUse.length === 0) break;\n            if (operatorsToUse.length === maxOperatorCount) {\n                LHSequation[i3] = operatorsToUse[0];\n                operatorsToUse.splice(0, 1);\n                continue;\n            }\n            if (i3 !== 0 && i3 !== LHSequationLength - 1) {\n                if (!possibleOperators.includes(LHSequation[i3 - 1])) {\n                    LHSequation[i3] = operatorsToUse[0];\n                    operatorsToUse.splice(0, 1);\n                }\n            }\n        }\n        for(let j = 0; j < LHSequationLength; j++){\n            if (numbersToUse.length === 0) break;\n            if (LHSequation[j] === undefined) {\n                LHSequation[j] = numbersToUse[0];\n                numbersToUse.splice(0, 1);\n            }\n        }\n        const eqString = LHSequation.join(\"\");\n        const formattedEqArray = formatEquation(eqString);\n        for(let i4 = 0; i4 < formattedEqArray.length; i4++){\n            if (formattedEqArray[i4].length > 1 && formattedEqArray[i4][0] === \"0\") {\n                let temp_number = \"\";\n                for(let j = 0; j < formattedEqArray[i4].length; j++){\n                    temp_number += getRandomInt(1, 9).toString();\n                }\n                formattedEqArray.splice(i4, 1, temp_number);\n            }\n        }\n        const RHSAnswer = calculateArray(formatEquation(eqString));\n        if (!RHSAnswer) return generateEquation(length);\n        const finalEquation = eqString + \"=\" + RHSAnswer;\n        if (finalEquation.length !== equationLength) return generateEquation(length);\n        console.log(finalEquation);\n        return finalEquation;\n    };\n    const formatEquation = (expression)=>{\n        var copy = expression;\n        expression = expression.replace(/[0-9]+/g, \"#\");\n        var numbers = copy.split(/[^0-9\\.]+/).filter((n)=>n\n        );\n        var operators = expression.split(\"#\").filter((n)=>n\n        );\n        var result = [];\n        for(let i = 0; i < numbers.length; i++){\n            if (operators.length === numbers.length) {\n                result.push(operators[i]);\n                result.push(numbers[i]);\n            } else {\n                result.push(numbers[i]);\n                if (i < operators.length) result.push(operators[i]);\n            }\n        }\n        return result;\n    };\n    const calculateArray = (arrayEquation)=>{\n        let result;\n        let temp_array = [\n            ...arrayEquation\n        ];\n        const divide = temp_array.indexOf(\"/\");\n        const multiply = temp_array.indexOf(\"*\");\n        const substract = temp_array.indexOf(\"-\");\n        const add = temp_array.indexOf(\"+\");\n        if (temp_array.length === 1) return parseInt(temp_array[0]);\n        if (add === 0) {\n            temp_array.splice(add, 1);\n        }\n        if (substract === 0) {\n            if (temp_array[substract + 1] === \"0\") {\n                temp_array.splice(substract + 1, 1, getRandomInt(1, 9).toString());\n            }\n            result = parseInt(temp_array[substract] + temp_array[substract + 1]);\n            temp_array.splice(substract, 2, result);\n        } else if (divide > 0) {\n            if (parseInt(temp_array[divide + 1]) === 0) return false;\n            if (parseInt(temp_array[divide - 1]) % parseInt(temp_array[divide + 1]) !== 0) return false;\n            result = parseInt(temp_array[divide - 1]) / parseInt(temp_array[divide + 1]);\n            temp_array.splice(divide - 1, 3, result);\n        } else if (multiply > 0) {\n            result = parseInt(temp_array[multiply - 1]) * parseInt(temp_array[multiply + 1]);\n            temp_array.splice(multiply - 1, 3, result);\n        } else if (add > 0) {\n            result = parseInt(temp_array[add - 1]) + parseInt(temp_array[add + 1]);\n            temp_array.splice(add - 1, 3, result);\n        } else if (substract > 0) {\n            result = parseInt(temp_array[substract - 1]) - parseInt(temp_array[substract + 1]);\n            temp_array.splice(substract - 1, 3, result);\n        }\n        return calculateArray(temp_array);\n    };\n    const getRandomInt = (min, max)=>{\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1) + min); /* for min and max inclusive */ \n    };\n    const values = {\n        generateEquation,\n        ROWS_COUNT,\n        EQUATION_LENGTH,\n        currentIndex,\n        currentGuess,\n        handleInput,\n        guesses,\n        equation,\n        setEquation,\n        error,\n        setError,\n        gameover,\n        win,\n        guessedResult,\n        setGuessedResult,\n        gameoverModal,\n        setGameoverModal,\n        resetEverything\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(playerContext.Provider, {\n        value: values,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/lucasklenovich/Documents/GitHub/ngt1/contexts/PlayerContext.jsx\",\n        lineNumber: 324,\n        columnNumber: 5\n    }, undefined);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./contexts/PlayerContext.jsx\n");

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _contexts_PlayerContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contexts/PlayerContext */ \"./contexts/PlayerContext.jsx\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _fortawesome_fontawesome_svg_core_styles_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @fortawesome/fontawesome-svg-core/styles.css */ \"./node_modules/@fortawesome/fontawesome-svg-core/styles.css\");\n/* harmony import */ var _fortawesome_fontawesome_svg_core_styles_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_fortawesome_fontawesome_svg_core_styles_css__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nfunction MyApp({ Component , pageProps  }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"shortcut icon\",\n                        href: \"/Guessculator-round.png\"\n                    }, void 0, false, {\n                        fileName: \"/Users/lucasklenovich/Documents/GitHub/ngt1/pages/_app.js\",\n                        lineNumber: 10,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"Guessculator\"\n                    }, void 0, false, {\n                        fileName: \"/Users/lucasklenovich/Documents/GitHub/ngt1/pages/_app.js\",\n                        lineNumber: 11,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/lucasklenovich/Documents/GitHub/ngt1/pages/_app.js\",\n                lineNumber: 9,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_PlayerContext__WEBPACK_IMPORTED_MODULE_1__.PlayerProvider, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                    ...pageProps\n                }, void 0, false, {\n                    fileName: \"/Users/lucasklenovich/Documents/GitHub/ngt1/pages/_app.js\",\n                    lineNumber: 14,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/lucasklenovich/Documents/GitHub/ngt1/pages/_app.js\",\n                lineNumber: 13,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUEyRDtBQUM5QjtBQUNFO0FBQ3VCO0FBRXRELFNBQVNFLEtBQUssQ0FBQyxFQUFFQyxTQUFTLEdBQUVDLFNBQVMsR0FBRSxFQUFFO0lBQ3ZDLHFCQUNFOzswQkFDRSw4REFBQ0gsa0RBQUk7O2tDQUNILDhEQUFDSSxNQUFJO3dCQUFDQyxHQUFHLEVBQUMsZUFBZTt3QkFBQ0MsSUFBSSxFQUFDLHlCQUF5Qjs7Ozs7NEJBQUc7a0NBQzNELDhEQUFDQyxPQUFLO2tDQUFDLGNBQVk7Ozs7OzRCQUFROzs7Ozs7b0JBQ3RCOzBCQUNQLDhEQUFDUixtRUFBYzswQkFDYiw0RUFBQ0csU0FBUztvQkFBRSxHQUFHQyxTQUFTOzs7Ozt3QkFBSTs7Ozs7b0JBQ2I7O29CQUNoQixDQUNIO0NBQ0g7QUFFRCxpRUFBZUYsS0FBSyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ3Vlc3NjdWxhdG9yLy4vcGFnZXMvX2FwcC5qcz9lMGFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBsYXllclByb3ZpZGVyIH0gZnJvbSBcIi4uL2NvbnRleHRzL1BsYXllckNvbnRleHRcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBcIi4uL3N0eWxlcy9nbG9iYWxzLmNzc1wiO1xuaW1wb3J0IFwiQGZvcnRhd2Vzb21lL2ZvbnRhd2Vzb21lLXN2Zy1jb3JlL3N0eWxlcy5jc3NcIjtcblxuZnVuY3Rpb24gTXlBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9KSB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8bGluayByZWw9XCJzaG9ydGN1dCBpY29uXCIgaHJlZj1cIi9HdWVzc2N1bGF0b3Itcm91bmQucG5nXCIgLz5cbiAgICAgICAgPHRpdGxlPkd1ZXNzY3VsYXRvcjwvdGl0bGU+XG4gICAgICA8L0hlYWQ+XG4gICAgICA8UGxheWVyUHJvdmlkZXI+XG4gICAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cbiAgICAgIDwvUGxheWVyUHJvdmlkZXI+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IE15QXBwO1xuIl0sIm5hbWVzIjpbIlBsYXllclByb3ZpZGVyIiwiSGVhZCIsIk15QXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwibGluayIsInJlbCIsImhyZWYiLCJ0aXRsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.js\n");

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-svg-core/styles.css":
/*!*******************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-svg-core/styles.css ***!
  \*******************************************************************/
/***/ (() => {



/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/_app.js"));
module.exports = __webpack_exports__;

})();